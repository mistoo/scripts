#!/bin/sh
# SSH/SCP tunnels helper script

MODE=$(basename $0)
[ -z "$MODE" ] && MODE="xssh"
VERBOSE=""
SSH_OPTIONS="-o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no"

# Hosts configuration schema (~/.xssh)
#[USER@]HOSTNAME;[VIA USER@]VIA HOST;TUNNEL ENDPOINT[;KNOCK SEQUENCE]

# eg if config line looks like: joe@foo;jane@gw.somedomain.com:1022;192.168.1.10, then
#
# $ xssh foo 
#
# is the same as:
#
# $ ssh -p 1022 jane@gw.somedomain.com -L SOME_LOCAL_PORT:192.168.1.10:22
# $ ssh -p SOME_LOCAL_PORT joe@localhost
#
# and:
#
# $ xscp /tmp/foo.txt foo:/var/tmp
#
# is the same as:
# $ ssh -p 1022 jane@gw.somedomain.com -L SOME_LOCAL_PORT:192.168.1.10:22
# $ scp -P SOME_LOCAL_PORT /tmp/foo.txt joe@localhost:/var/tmp/

if [ -f "$HOME/.xssh" ]; then
    HOSTS=$(cat "$HOME/.xssh" | grep -v '^#')
else
    echo "$HOME/.xssh does not exists"
    exit 1
fi

exit1() {
    local msg=$1
    [ -n "$msg" ] && echo $msg
    exit 1
}

get_free_port() {
    port=$(python -c 'import socket; s=socket.socket(); s.bind(("", 0)); print(s.getsockname()[1]); s.close()')
    [ -z "$port" ] && exit1 "port allocation error"
    echo $port
    return 0
}

do_knock() {
    local host=$1
    local seq=$2
    [ -n "$VERBOSE" ] && echo -n "* knocking $host:"
    
    for i in $(echo $seq | sed 's|,| |g'); do
        echo -n "*" | nc -w1 $host $i
        [ -n "$VERBOSE" ] && echo -n " $i"
    done
    [ -n "$VERBOSE" ] && echo
}

knock() {
    local via=$1
    local hostspec=$2
    
    local knock_seq=$(echo $hostspec | cut -f4 -d';')
    if [ -n "$knock_seq" ]; then
        local via_host=$via
        if echo $via_host | grep -q '@'; then # user@host?
            via_host=$(echo $via_host | cut -f2 -d'@')
        fi

        if echo $via_host | grep -q ':'; then # host:port?
            via_host=$(echo $via_host | cut -f1 -d':')
        fi
        do_knock $via_host $knock_seq
    fi
}

xssh_usage() {
    exit1 "Usage: xssh [-l] [-v] [HOSTNAME]"
}

xssh_getopt() {
    [ $# = 0 ] && xssh_usage
    
    while [ $# -gt 0 ]; do
        case "${1}" in
            --hosts)            # for bash autocompletition
                for hostspec in $HOSTS; do
                    name=$(echo $hostspec | cut -f1 -d';')
                    if echo $name | grep -q '@'; then # user@host?
                        name=$(echo $name | cut -f2 -d'@')
                    fi
                    echo $name
                done
                exit 0
                ;;
	    -l)
                echo "Configured tunnels:"
                for hostspec in $HOSTS; do
                    echo "  $hostspec"
                done
                exit 0
                ;;
            -v)
                VERBOSE="1"
                shift
                ;;
	    -*)
                SSH_OPTIONS="$SSH_OPTIONS $1"
                shift
                ;;
            
            *)
                TO=$1
                shift
                ;;
        esac
    done
    [ -z "$TO" ] && xssh_usage
}


xssh() {
    found=
    for hostspec in $HOSTS; do
        name=$(echo $hostspec | cut -f1 -d';')
        
        to_user=$(whoami)
        if echo $name | grep -q '@'; then # user@host?
            to_user=$(echo $name | cut -f1 -d'@')
            name=$(echo $name | cut -f2 -d'@')
        fi
        
        if [ "$name" == "$TO" ]; then
            found="1"

            via=$(echo $hostspec | cut -f2 -d';')
            fwd=$(echo $hostspec | cut -f3 -d';')
            
            if [ -z "$via" -a -z "$fwd" ]; then # just ssh 
                knock $name $hostspec
                [ -n "$VERBOSE" ] && echo "* ssh -A -l $to_user $name"
                ssh -A -l $to_user $name
            else 
                [ -z "$via" ] && exit1 "$hostspec: empty via"
                [ -z "$fwd" ] && exit1 "$hostspec: empty endpoint"
                
                port=$(get_free_port)
                knock $via $hostspec

                via_port=22
                if echo $via | grep -q ':'; then # host:port?
                    via_port=$(echo $via | cut -f2 -d':')
                    via=$(echo $via | cut -f1 -d':')
                fi
            
                if [ -n "$VERBOSE" ]; then
                    echo "* ssh -A $via -L $port:$fwd"
                    echo "* ssh -p $port -l $to_user localhost $@"
                fi
                ssh -A $via -p $via_port -L $port:$fwd -f -o ExitOnForwardFailure=yes sleep 10
                exec ssh -p $port -l $to_user localhost -q $SSH_OPTIONS
            fi
        fi
    done

    if [ -z "$found" ]; then
        echo "$TO: no such host configured, use -l to list available hosts"
        exit 1
    fi
}


xscp_usage() {
    exit1 "Usage: xscp FILE... HOSTNAME[:FILE]"
    
}

xscp_getopt() {
    [ $# = 0 ] && xscp_usage
    
    while [ $# -gt 0 ]; do
        case "${1}" in
	    -l)
                echo "Configured tunnels:"
                for hostspec in $HOSTS; do
                    echo "  $hostspec"
                done
                exit 0
                ;;
            -v)
                VERBOSE="1"
                shift
                ;;
	    -*)
                SSH_OPTIONS="$SSH_OPTIONS $1"
                shift
                ;;
            
            *:*)
                TO=$1
                shift
                ;;
            *)
                SRC="$SRC $1"
                shift
                ;;
        esac
    done
    [ -z "$TO" -o -z "$SRC" ] && xscp_usage
}

xscp() {
    found=
    TO_PATH=$(echo $TO | cut -f2 -d':')
    TO=$(echo $TO | cut -f1 -d':')

    for hostspec in $HOSTS; do
        name=$(echo $hostspec | cut -f1 -d';')
        
        to_user=$(whoami)
        if echo $name | grep -q '@'; then # user@host?
            to_user=$(echo $name | cut -f1 -d'@')
            name=$(echo $name | cut -f2 -d'@')
        fi
        
        if [ "$name" == "$TO" ]; then
            found="1"
            port=$(get_free_port)
            via=$(echo $hostspec | cut -f2 -d';')
            fwd=$(echo $hostspec | cut -f3 -d';')
            
            [ -z "$via" ] && exit1 "$hostspec: empty via"
            [ -z "$fwd" ] && exit1 "$hostspec: empty endpoint"
            knock $via $hostspec

            via_port=22
            if echo $via | grep -q ':'; then # host:port?
                via_port=$(echo $via | cut -f2 -d':')
                via=$(echo $via | cut -f1 -d':')
            fi
            
            if [ -n "$VERBOSE" ]; then
                echo "* ssh -A $via -L $port:$fwd"
                echo "* scp -P $port $SSH_OPTIONS $SRC $to_user@localhost:$TO_PATH"
            fi
            ssh -A $via -p $via_port -L $port:$fwd -f -o ExitOnForwardFailure=yes sleep 10
            exec scp -P $port $SSH_OPTIONS $SRC $to_user@localhost:$TO_PATH 
        fi
    done

    if [ -z "$found" ]; then
        echo "$TO: no such host configured, use -l to list available hosts"
        exit 1
    fi
}

if [ "$MODE" = "xssh" ]; then
    xssh_getopt $@
    xssh
else 
    xscp_getopt $@
    xscp
fi
